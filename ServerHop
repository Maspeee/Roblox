--	Services  ------------------------------------
--------------------------------------------------

local TpS = game:GetService("TeleportService")
local Http = game:GetService("HttpService")

--	Variables ------------------------------------
--------------------------------------------------

local placeId = game.PlaceId
local jobId = game.JobId
local api = "https://games.roblox.com/v1/games/" ..tostring(placeId) .."/servers/Public?sortOrder=Desc&limit=100"

--	Functions  -----------------------------------
--------------------------------------------------

function listServers(cursor)
	cursor = if cursor then "&cursor=" ..cursor else ""
	local link = game:HttpGet(api ..cursor)
	local ret

	repeat
		ret = Http:JSONDecode(link)
		task.wait()
	until ret and ret.data
	
	return ret
end

function serverHopCalled(queueLink)		print("Hopping")
	local maxPing = getgenv().maxPing or 500
	local freeSlots = getgenv().freeSlots or 0
	local success
	
	repeat
	   	local servers = listServers(nextCursor)
		nextCursor = servers.nextPageCursor
		
		for _, s in ipairs(servers.data) do
			if s.playing +freeSlots >= s.maxPlayers then continue end
			if s.id == jobId then continue end
			if s.ping >= maxPing then continue end
			
			if queueLink then
				queue_on_teleport(game:HttpGet(queueLink))
			end
			
			success = pcall(TpS.TeleportToPlaceInstance, TpS, placeId, s.id)
			if success then break end
		end
	until success or not nextCursor
	
    TpS.TeleportInitFailed:Wait()
    serverHopCalled(queueLink)
end

--	Main  ----------------------------------------
--------------------------------------------------

return serverHopCalled
