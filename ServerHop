--	Services  ------------------------------------
--------------------------------------------------

local TpS = game:GetService("TeleportService")
local Http = game:GetService("HttpService")

--	Variables ------------------------------------
--------------------------------------------------

local placeId = game.PlaceId
local jobId = game.JobId
local api = "https://games.roblox.com/v1/games/" ..tostring(placeId) .."/servers/Public?sortOrder=Desc&limit=100"
local cursor = ""

--	Functions  -----------------------------------
--------------------------------------------------

function listServers()
	return Http:JSONDecode(game:HttpGet(api ..cursor))
end

function hopFuncCalled(queueLink, maxPing, freeSlots) print("Hopping")
	maxPing = maxPing or 500
	freeSlots = freeSlots or 0
	local success
	
	repeat
	   	local servers = listServers()
        cursor = "&cursor=" ..servers.nextPageCursor
        
        for _, s in ipairs(servers.data) do
            if s.playing +freeSlots >= s.maxPlayers then continue end
            if s.id == jobId then continue end
            if s.ping >= maxPing then continue end
            
            if queueLink then
                queue_on_teleport(game:HttpGet(queueLink))
            end
            
            success = pcall(TpS.TeleportToPlaceInstance, TpS, placeId, s.id)
            if success then break end
        end
	until success or not cursor
	
    TpS.TeleportInitFailed:Wait()
    hopFuncCalled(queueLink, maxPing, freeSlots)
end

--	Main  ----------------------------------------
--------------------------------------------------

return hopFuncCalled
