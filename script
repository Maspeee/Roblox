local Players = game:GetService("Players")
local Teleport = game:GetService("TeleportService")
local RStorage = game:GetService("ReplicatedStorage")
local Http = game:GetService("HttpService")
local Core = game:GetService("CoreGui")

local team = "Marines"

local plr = Players.LocalPlayer
local char, nextS

local api1 = "https://games.roblox.com/v1/games/"
local api2 = "/servers/Public?sortOrder=Desc&limit=100"

local placeId = 7449423635 --sea 3
local jobId = game.JobId
local servers = api1 ..tostring(placeId) ..api2

function getDist(p1, p2)
    return (p1.Position -p2.Position).Magnitude
end

function findNearest()
	local nearest

	for _, v in workspace:GetChildren() do 
		if v.Name == "Chest3" or v.Name == "Chest2" then
			if not nearest then
				nearest = v

			elseif getDist(char.Head, v) < getDist(char.Head, nearest) then
				nearest = v
			end
		end
	end

    return nearest
end

function listServers(cursor)
	cursor = cursor or ""

	return Http:JSONDecode(game:HttpGet(servers .."&cursor=" ..cursor))
end

function serverHop()
	repeat
	   	local serverList = listServers(nextS)
		
	   	for i, v in serverList.data do
	     	if v.playing < v.maxPlayers and v.id ~= jobId then
				queue_on_teleport(game:HttpGet("https://raw.githubusercontent.com/Maspeee/GetChests/main/script"))
				local success, _ = pcall(Teleport.TeleportToPlaceInstance, Teleport, placeId, v.id, plr)

				if success then
	         		break
				end
	       	end
	   end
	   
	   nextS = serverList.nextPageCursor
	until not nextS
end

function onKick(child)
	if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild("ErrorFrame") then
		serverHop()
	end
end

--	Main	-------------------------------------

RStorage:WaitForChild("Remotes").CommF_:InvokeServer("SetTeam", team)
char = plr.Character or plr.CharacterAdded:Wait()

Core.RobloxPromptGui.promptOverlay.ChildAdded:Connect(onKick)

while true do
	local chest = findNearest()
	
	if not chest then break end
	if not char.Parent then break end
	
	char.PrimaryPart.CFrame = chest.CFrame
	task.wait(.1)
end

serverHop()
